---
language: python
python: "2.7"

env:
  - SITE=test.yml

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y curl python-pip python-apt gcc

install:
  # Install Ansible.
  - pip install ansible

  # Add ansible.cfg to pick up roles path.
  - printf '[defaults]\nroles_path = ../' > ansible.cfg
  - printf '\n127.0.0.1 example.com' | sudo tee -a /etc/hosts
 
script:
  # Check the role/playbook's syntax.

  - ansible-playbook -i tests/inventory/test tests/$SITE --syntax-check

  #  
  #                CREATE HTTP DEPLOYMENT
  #
  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory/test tests/$SITE --connection=local --sudo

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory/test tests/$SITE --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - >
    curl -Is http://example.com/
    | grep -q "HTTP/1.1 200 Found"     
    && (echo 'Apache2 is accessible: pass' && exit 0)      
    || (echo 'Apache2 is accessible: fail' && exit 1)

  - >
    sudo netstat -plnt
    | grep -q 80
    && (echo 'Apache2 is listening: pass' && exit 0)
    || (echo 'Apache2 is listening: fail' && exit 1)

  #  
  #                CREATE HTTPS DEPLOYMENT
  #
  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory/test tests/$SITE -e 'SSL=true' --connection=local --sudo

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
  - ansible-playbook -i tests/inventory/test tests/$SITE -e 'SSL=true' --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  - curl -I https://example.com/

  - >
    curl -Is https://example.com/
    | grep -q "HTTP/1.1 200 Found"     
    && (echo 'Apache2 is accessible: pass' && exit 0)      
    || (echo 'Apache2 is accessible: fail' && exit 1)

  - >
    sudo netstat -plnt
    | grep -q 443
    && (echo 'Apache2 is listening: pass' && exit 0)
     || (echo 'Apache2 is listening: fail' && exit 1)
